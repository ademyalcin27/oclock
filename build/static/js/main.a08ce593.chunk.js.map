{"version":3,"sources":["components/Button.js","components/TimerLengthControl.js","components/Timer.js","utils/helper.js","components/App.js","reportWebVitals.js","index.js"],"names":["Button","children","props","type","TimerLengthControl","titleID","title","minID","onClick","lengthID","length","addID","className","id","value","defaultData","brkLength","seshLength","timerState","timerType","timer","intervalID","alarmColor","color","Timer","useState","data","setData","audioBeep","setAudioBeep","lengthControl","stateToChange","sign","currentLength","prevState","beginCountDown","fn","time","cancel","nextAt","timeout","wrapper","Date","getTime","setTimeout","clearTimeout","accurateInterval","decrementTimer","phaseControl","timerControl","warning","buzzer","switchTimer","_timer","play","num","str","e","currentTarget","style","minutes","Math","floor","seconds","clockify","disabled","newData","pause","currentTime","preload","ref","audio","src","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a08ce593.chunk.js","sourcesContent":["import React from 'react';\nconst Button = ({children, ...props}) => {\n    return <button type=\"button\" {...props}>{children}</button>\n}\nexport default Button;\n","import React from 'react';\nimport Button from './Button'\n\nconst TimerLengthControl = ({titleID, title, minID, onClick, lengthID, length, addID}) => {\n\n    return <div className=\"length-control\">\n        <div id={titleID}>{title}</div>\n        \n        <Button className=\"btn-level\" id={minID} onClick={onClick} value=\"-\">\n            <i className=\"fa fa-arrow-down fa-2x\" /> \n        </Button>\n        \n        <div className=\"btn-level\" id={lengthID}>{length}</div>\n        \n        <Button className=\"btn-level\" id={addID} onClick={onClick} value=\"+\">\n            <i className=\"fa fa-arrow-up fa-2x\" />\n        </Button>\n  </div>\n}\nexport default TimerLengthControl;","import React, { useState } from 'react';\nimport { accurateInterval } from '../utils/helper'\nimport TimerLengthControl from './TimerLengthControl'\nimport Button from './Button'\nconst defaultData = {\n    brkLength: 5,\n    seshLength: 25,\n    timerState: 'stopped',\n    timerType: 'Session',\n    timer: 1500,\n    intervalID: '',\n    alarmColor: { color: 'white' }\n};\n\nconst Timer = () => {\n    const [data, setData] = useState(defaultData);\n    const [audioBeep, setAudioBeep] = useState({});\n    \n    const lengthControl = (stateToChange, sign, currentLength, timerType) => {\n        if (data.timerState === 'running') {\n            return;\n        }\n        if (data.timerType === timerType) {\n            if (sign === '-' && currentLength !== 1) {\n                setData((prevState) => ({...prevState, [stateToChange]: currentLength - 1 }));\n            } else if (sign === '+' && currentLength !== 60) {\n                setData((prevState) => ({...prevState, [stateToChange]: currentLength + 1 }));\n            }\n        } else if (sign === '-' && currentLength !== 1) {\n            setData((prevState) => ({...prevState, [stateToChange]: currentLength - 1, timer: currentLength * 60 - 60 }));\n        } else if (sign === '+' && currentLength !== 60) {\n            setData((prevState) => ({...prevState, [stateToChange]: currentLength + 1, timer: currentLength * 60 + 60 }));\n        }\n    }\n    const setBrkLength = (e) => {\n        lengthControl('brkLength', e.currentTarget.value, data.brkLength, 'Session')\n    }\n    const setSeshLength = (e) => {\n        lengthControl('seshLength', e.currentTarget.value, data.seshLength, 'break')\n    }\n    const beginCountDown = () => {\n        const intervalID = accurateInterval(() => {\n                        decrementTimer();\n                        phaseControl();\n                    }, 1000)\n        setData((prevState) => ({...prevState, intervalID  }));\n\n    }\n    const timerControl = () => {\n        if (data.timerState === 'stopped') {\n            beginCountDown();\n            setData((prevState) => ({...prevState, timerState: 'running'  }));\n          } else {\n            setData((prevState) => ({...prevState, timerState: 'stopped'  }));\n            if (data.intervalID) {\n              data.intervalID.cancel();\n            }\n          }\n    }\n    const decrementTimer = () => setData((prevState) => ({...prevState, timer: prevState.timer - 1  }));\n    const phaseControl = () => {\n        let timer = data.timer;\n        warning(timer);\n        buzzer(timer);\n        if (timer < 0) {\n          if (data.intervalID) {\n            data.intervalID.cancel();\n          }\n          if (data.timerType === 'Session') {\n            beginCountDown();\n            switchTimer(data.brkLength * 60, 'Break');\n          } else {\n            beginCountDown();\n            switchTimer(data.seshLength * 60, 'Session');\n          }\n        }\n    }\n    const warning = (_timer) => {\n      const color = _timer < 61 ? '#a50d0d' : 'white'\n\n      setData((prevState) => ({...prevState, alarmColor: { color }  }))\n    }\n    const buzzer = (_timer) =>{\n      if (_timer === 0) {\n        audioBeep.play();\n      }\n    }\n    const switchTimer = (num, str) => {\n      setData((prevState) => ({\n        ...prevState, \n        ...{ timer: num, timerType: str, alarmColor: { color: 'white' } }  \n      }));\n    }\n    const clockify = () => {\n      let minutes = Math.floor(data.timer / 60);\n      let seconds = data.timer - minutes * 60;\n      seconds = seconds < 10 ? '0' + seconds : seconds;\n      minutes = minutes < 10 ? '0' + minutes : minutes;\n      return minutes + ':' + seconds;\n    }\n    const reset = () => {\n      const newData = {\n        brkLength: 5,\n        seshLength: 25,\n        timerState: 'stopped',\n        timerType: 'Session',\n        timer: 1500,\n        intervalID: '',\n        alarmColor: { color: 'white' }\n      }\n      setData((prevState) => ({\n        ...prevState, \n        newData \n      }));\n      if (data.intervalID) {\n        data.intervalID.cancel();\n      }\n      audioBeep.pause();\n      audioBeep.currentTime = 0;\n    }\n\n    return <div>\n      <div className=\"main-title\">25 + 5 Clock</div>\n        <TimerLengthControl\n          addID=\"break-increment\"\n          length={data.brkLength}\n          lengthID=\"break-length\"\n          minID=\"break-decrement\"\n          onClick={setBrkLength}\n          title=\"Break Length\"\n          titleID=\"break-label\"\n        />\n         <TimerLengthControl\n          addID=\"session-increment\"\n          length={data.seshLength}\n          lengthID=\"session-length\"\n          minID=\"session-decrement\"\n          onClick={setSeshLength}\n          title=\"Session Length\"\n          titleID=\"session-label\"\n        />\n        <div className=\"timer\" style={data.alarmColor}>\n          <div className=\"timer-wrapper\">\n            <div id=\"timer-label\">{data.timerType}</div>\n            <div id=\"time-left\">{clockify()}</div>\n          </div>\n        </div>\n        <div className=\"timer-control\">\n          <Button id=\"start_stop\" onClick={timerControl} disabled={data.timerState === 'running'}>\n            <i className=\"fa fa-play fa-2x\" />\n          </Button>\n          <Button id=\"start_stop\" onClick={timerControl} disabled={data.timerState === 'stopped'}>\n          <i className=\"fa fa-pause fa-2x\" />\n          </Button>\n          <Button id=\"reset\" onClick={reset}>\n            <i className=\"fa fa-refresh fa-2x\" />\n          </Button>\n        </div>\n        <audio\n          id=\"beep\"\n          preload=\"auto\"\n          ref={(audio) => { setAudioBeep(audio); }}\n          src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\n        />\n    </div>\n\n}\nexport default Timer;","export const accurateInterval = (fn, time) => {\n    let cancel, nextAt, timeout, wrapper;\n    nextAt = new Date().getTime() + time;\n    timeout = null;\n    \n    wrapper = () => {\n      nextAt += time;\n      timeout = setTimeout(wrapper, nextAt - new Date().getTime());\n      return fn();\n    };\n    cancel = () => clearTimeout(timeout);\n\n    timeout = setTimeout(wrapper, nextAt - new Date().getTime());\n\n    return {\n      cancel: cancel\n    };\n  };","import '../assets/scss/app.scss';\nimport Timer from './Timer';\nfunction App() {\n  return (\n    <div id=\"container\">\n      <div className=\"App\">\n        <Timer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}